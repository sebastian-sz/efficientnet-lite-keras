name: CI
on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        tensorflow-version: [ 2.2, 2.3, 2.4, 2.5 ]
        # No matching distributions:
        exclude:
          - { python-version: 3.9, tensorflow-version: 2.2}
          - { python-version: 3.9, tensorflow-version: 2.3}
          - { python-version: 3.9, tensorflow-version: 2.4}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (TF version ${{ matrix.tensorflow-version }})
        run: |
          python -m pip install --upgrade pip
          python -m pip install tensorflow==${{matrix.tensorflow-version}}
          pip install -r tests/requirements.txt
          pip install -e .
      - name: Run tests
        run: make test


  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: lint code
        run: |
          pip install pre-commit~=2.12
          make lint

  dockerTest:
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v2
       - name: Build docker
         run: bash docker/build_docker.sh
       - name: Test docker
         run: |
          docker run --rm keras_efficientnet_lite python -m unittest tests/*.py
